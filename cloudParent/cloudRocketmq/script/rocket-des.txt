rocketmq的特点
1,具有灵活的可扩展性，rocketmq天然支持集群，其四大核心组件（nameserver，broker，producer，consumer）每一个都可以在
没有单点故障的情况下进行水平扩展
2，具有海量消息堆积能力
3，支持顺序消息
4，支持多种消息过滤方式
5，支持事务消息
6，支持回溯消息

基本概念：
1,生产者（负责生产消息）
    三种发送消息的方式
    1）同步
        同步发送指消息发送方发出消息之后，会在接收方发回响应之后才发送下一个数据包，一般适用于重要通知消息场景，如邮件通知，
        营销短信等。
    2）异步
        发送出去之后不等待接收方响应，就接着发送下一个，一般适用于链路耗时较长而对时间敏感的业务场景。
    3）单向
        只负责发送消息而不等待服务器的回应且没有回调函数触发等，一般适用于某些耗时非常短但对可靠性要求不高的场景，如日志收集

2，生产者组
    生产者组是一类生产者的集合，这类生产者通常发送一类消息且发送的逻辑相同，生产者通过生产者组的名字来标识自己是一个集群

3,消费者（用于消费消息）
    消费者分为两类：拉取型消费者和推送型消费者

    拉取型消费者
        主动从消息服务器拉取消息，只要批量拉取到消息，用户应用就会启动消费过程，所以pull被称为主动消费者

    推送型消费者
        推送型消费者封装了消息的拉取，消费进度和其他内部维护工作，将消息到达时执行的回调接口留给用户应用自己实现，
        所以push被称为被动消费类型，但实现上看，还是从消费服务器拉取消息的，不同于pull的是，push首先要注册消息监听器，
        当监听被触发才开始消费消息

4，消费者组
    消费者组是一类消费者的集合，这类消费者通常消费同一类消息且消费逻辑一致，rocketmq正是通过这种分组机制，实现了天然的
    消息负载均衡，在消费消息时，通常消费者组实现了将消息分发到多个消费者服务器实例，
    比如：某个主题有9条消息，其中一个消费者组有3个实例，那么每个实例将均衡3条消息，也就意味着我们可以很方便的通过增加机器
    来实现水平的扩展。
5，消息服务器（broker）
    主要作用是消息的存储中心，用来接收来自生产者的消息并进行存储，消费者从这里拉取消息，它还存储与消息相关的元数据，包括
    用户组，消费进度偏移量，队列信息等